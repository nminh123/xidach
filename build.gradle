buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://s01.oss.sonatype.org' }
        gradlePluginPortal()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
        google()
    }
    dependencies {
        classpath 'org.wisepersist:gwt-gradle-plugin:1.1.16'
        classpath 'org.gretty:gretty:3.1.0'
        classpath 'com.android.tools.build:gradle:8.6.0'
        classpath 'com.google.gms:google-services:4.4.2'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:3.0.2'
        classpath "com.badlogicgames.gdx:gdx-tools:1.12.0"
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "Baby Three Adventure"
        gdxVersion = '1.12.0'
        gdxControllersVersion = '2.1.0'
        pushMsgsVersion = '1.0.0'
        spineVersion = '3.8.55.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://artifact.bytedance.com/repository/pangle" }//Pangle
        maven { url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea" }//mintegral
        maven { url "https://android-sdk.is.com/" } //ironSource
    }
}

project(":desktop") {
    apply plugin: "java-library"

    project.ext.lwjglVersion = "3.3.0"
    project.ext.lwjglMacosNatives = "natives-macos-arm64"

    def nativePlatforms = [
            "natives-windows",
            "natives-windows-x86",
            "natives-linux",
            "natives-linux-arm32",
            "natives-linux-arm64",
            "natives-macos",
            "natives-macos-arm64"
    ]

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-tools:1.12.0"
        implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
        implementation "org.lwjgl:lwjgl"
        implementation "org.lwjgl:lwjgl-glfw"
        implementation "org.lwjgl:lwjgl-jemalloc"
        implementation "org.lwjgl:lwjgl-openal"
        implementation "org.lwjgl:lwjgl-opengl"
        nativePlatforms.each {
            runtimeOnly "org.lwjgl:lwjgl::$it"
            runtimeOnly "org.lwjgl:lwjgl-glfw::$it"
            runtimeOnly "org.lwjgl:lwjgl-jemalloc::$it"
            runtimeOnly "org.lwjgl:lwjgl-openal::$it"
            runtimeOnly "org.lwjgl:lwjgl-opengl::$it"
        }
//        api "com.badlogicgames.gdx:gdx-lwjgl3-glfw-awt-macos:$gdxVersion"
    }
}

project(":android") {
    apply plugin: "android"
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
    configurations { natives }
    dependencies {
        def work_version = "2.7.0"
        implementation "androidx.work:work-runtime:$work_version"
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
        def multidex_version = "2.0.1"
        implementation "androidx.multidex:multidex:$multidex_version"
        implementation 'androidx.annotation:annotation:1.7.1'
        implementation 'androidx.appcompat:appcompat:1.6.1'

        // Dependencies native
        //implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
        implementation platform('com.google.firebase:firebase-bom:33.6.0')
        // When using the BoM, you don't specify versions in Firebase library dependencies
        implementation("com.google.firebase:firebase-config")
        implementation("com.google.firebase:firebase-analytics")
        implementation("com.google.firebase:firebase-crashlytics")
        implementation("com.google.firebase:firebase-messaging")
        implementation 'com.google.android.gms:play-services-basement:18.5.0'

        // Mediation
        implementation 'com.google.ads.mediation:applovin:13.1.0.0'
        implementation 'com.google.ads.mediation:inmobi:10.8.0.0'
        implementation 'com.google.ads.mediation:ironsource:8.6.1.0'
        implementation 'com.google.ads.mediation:vungle:7.4.3.0'
        implementation 'com.google.ads.mediation:facebook:6.18.0.0'
        implementation 'com.google.ads.mediation:mintegral:16.8.61.0'
        implementation 'com.google.ads.mediation:pangle:6.4.0.6.0'
        implementation 'com.unity3d.ads:unity-ads:4.13.1'
        implementation 'com.google.ads.mediation:unity:4.13.1.0'

        implementation 'com.google.android.gms:play-services-ads:23.6.0'

        // GDPR
        implementation "com.google.android.ump:user-messaging-platform:3.1.0"
        // FCM
        implementation "de.golfgl.gdxpushmessages:gdx-pushmessages-android-fcm:$pushMsgsVersion"
        //RestartApp
        implementation "com.jakewharton:process-phoenix:2.1.2"

    }
}

project(":core") {
    apply plugin: "java-library"

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"

        implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        implementation "net.dermetfan.libgdx-utils:libgdx-utils:0.13.4"

    }
}

project(":html") {
    apply plugin: "java-library"
    apply plugin: "gwt"
    apply plugin: "war"
    apply plugin: "org.gretty"

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        api "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        api "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
    }
}